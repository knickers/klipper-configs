# This file contains common pin mappings for the 2017 Creality
# CR-10. To use this config, the firmware should be compiled for the
# AVR atmega1284p.

# Note, a number of Melzi boards are shipped with a bootloader that
# requires the following command to flash the board:
#  avrdude -p atmega1284p -c arduino -b 57600 -P /dev/ttyUSB0 -U out/klipper.elf.hex
# If the above command does not work and "make flash" does not work
# then one may need to flash a bootloader to the board - see the
# Klipper docs/Bootloaders.md file for more information.

# See docs/Config_Reference.md for a description of parameters.

[stepper_x]
step_pin: PD7
dir_pin: !PC5
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC2
position_endstop: 0
position_max: 319
homing_speed: 30

[stepper_y]
step_pin: PC6
dir_pin: !PC7
enable_pin: !PD6
microsteps: 16
rotation_distance: 40
endstop_pin: ^PC3
position_endstop: 0
position_max: 317
homing_speed: 30

[stepper_z]
step_pin: PB3
dir_pin: PB2
enable_pin: !PA5
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PC4                    # Stock Z endstop
endstop_pin: probe:z_virtual_endstop  # Z probe endstop
#position_endstop: 0.0
position_max: 400
position_min: -2 # The Z carriage may need to travel below the Z=0
                 # homing point if the bed has a significant tilt.

[probe]
pin: ^PC4
x_offset: -42.0
y_offset: 5.0
#z_offset: 5.0

# The safe_z_home section modifies the default G28 behavior (used for Z probe endstop)
[safe_z_home]
home_xy_position: 45,20
speed: 30
z_hop: 15
z_hop_speed: 15

[bed_mesh]
speed: 250
horizontal_move_z: 7 # Z height during horizontal moves
mesh_min: 0,20
mesh_max: 277,290
probe_count: 9,9
algorithm: bicubic

[gcode_macro G29]
description: Run mesh bed leveling procedure
gcode:
  BED_MESH_CALIBRATE
  G1 X10 Y10 Z15 F4000

[gcode_macro WAIT_FOR_PROBE]
gcode:
  M117 Check Bed probe
  PAUSE

[extruder]
step_pin: PB1
dir_pin: !PB0
enable_pin: !PD6
microsteps: 16
rotation_distance: 33.683
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA7
#control: pid
#pid_Kp: 22.57
#pid_Ki: 1.72
#pid_Kd: 73.96
min_temp: 0
max_temp: 250

[heater_bed]
heater_pin: PD4
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA6
#control: pid
#pid_Kp: 426.68
#pid_Ki: 78.92
#pid_Kd: 576.71
min_temp: 0
max_temp: 130

[fan]
pin: PB4

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[display]
lcd_type: st7920
cs_pin: PA3
sclk_pin: PA1
sid_pin: PC1
encoder_pins: ^PD2, ^PD3
click_pin: ^!PC0

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.906
#*# pid_ki = 1.435
#*# pid_kd = 126.124
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.767
#*# pid_ki = 0.841
#*# pid_kd = 1574.496
#*#
#*# [probe]
#*# z_offset = 4.875
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.112500, -0.017500, 0.115000, 0.150000, 0.090000, 0.010000
#*# 	-0.470000, -0.382500, -0.265000, -0.245000, -0.322500, -0.400000
#*# 	-0.515000, -0.425000, -0.332500, -0.345000, -0.452500, -0.540000
#*# 	-0.552500, -0.482500, -0.392500, -0.375000, -0.477500, -0.567500
#*# 	-0.495000, -0.417500, -0.305000, -0.312500, -0.405000, -0.482500
#*# 	-0.302500, -0.237500, -0.145000, -0.155000, -0.285000, -0.400000
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = lagrange
#*# y_count = 6
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 6
#*# max_y = 275.0
#*# mesh_x_pps = 2
#*# max_x = 265.0
